version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 633cb615def2956cb2c4b0817b54f0e5b15bb8c42d9f9b921b8b2e02b217c369

    docker:
      - image: circleci/python:3.6
      - image: circleci/node:8
      - image: neo4j:3.2

    working_directory: ~/Unity-Lab

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-{{ checksum "environment.yml" }}
          - v1-dependencies

      # - run:
      #     name: Install NodeJS dependencies
      #     command: |
      #       sudo npm install -g yarn
      #       yarn install
      # - save_cache:
      #     paths:
      #       - node_modules
      #     key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Install Conda
          command: |
            if which conda >/dev/null; then
              echo "Conda is already installed"
            else
              curl -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
              bash Miniconda3-latest-Linux-x86_64.sh -b
            fi
            echo 'export PATH=$HOME/miniconda3/bin:$PATH' >> $BASH_ENV

      - run:
          name: Install Python dependencies with Conda
          command: |
            conda config --add channels conda-forge
            conda config --add channels soumith
            conda create -n lab python=3.6 ipykernel -c conda-forge -c soumith -y
            source activate lab
            python -m ipykernel install --user --name lab
            conda env update -f environment.yml
      - save_cache:
          paths:
            - ~/miniconda3
          key: v1-dependencies-{{ checksum "environment.yml" }}

      # - run:
      #     name: Run Python tests
      #     command: |
      #       curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      #       chmod +x ./cc-test-reporter
      #       ./cc-test-reporter before-build
      #       source activate lab
      #       python setup.py test
      #       ./cc-test-reporter after-build -t coverage.py --exit-code $? .coverage

      - run:
          name: Run Python tests
          command: |
            source activate lab
            python setup.py test
      - store_test_results:
          path: .coverage

workflows:
  version: 2
  build-test:
    jobs:
      - build
