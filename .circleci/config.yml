version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 633cb615def2956cb2c4b0817b54f0e5b15bb8c42d9f9b921b8b2e02b217c369

    working_directory: ~/Unity-Lab

    docker:
      - image: circleci/python:3.6
      # - image: circleci/node:8
      # - image: neo4j:3.2

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "environment.yml" }}
          - v1-dependencies

      # - run:
      #     name: Install NodeJS dependencies
      #     command: |
      #       sudo npm install -g yarn
      #       yarn install
      # - save_cache:
      #     paths:
      #       - node_modules
      #     key: v1-dependencies-{{ checksum "package.json" }}

      - run: echo 'export PATH=$HOME/miniconda3/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install Conda
          command: |
            if which conda >/dev/null; then
              echo "Conda is already installed"
            else
              curl -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
              bash Miniconda3-latest-Linux-x86_64.sh -b -u
            fi

      - run:
          name: Install Python dependencies with Conda
          command: |
            if conda env list | grep "^lab " >/dev/null; then
              echo "conda env lab is already installed"
            else
              conda config --add channels conda-forge
              conda config --add channels soumith
              conda create -n lab python=3.6 ipykernel -c conda-forge -c soumith -y
              source activate lab
              python -m ipykernel install --user --name lab
            fi
            source activate lab
            conda env update -f environment.yml
      - save_cache:
          key: v1-dependencies-{{ checksum "environment.yml" }}
          paths:
            - ~/miniconda3
            - ~/.cache/pip

  test:
    environment:
      CC_TEST_REPORTER_ID: 633cb615def2956cb2c4b0817b54f0e5b15bb8c42d9f9b921b8b2e02b217c369

    working_directory: ~/Unity-Lab

    docker:
      - image: circleci/python:3.6
      # - image: circleci/node:8
      # - image: neo4j:3.2

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "environment.yml" }}
          - v1-dependencies

      - run: echo 'export PATH=$HOME/miniconda3/bin:$PATH' >> $BASH_ENV
      - run:
          name: Run Python tests
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
            source activate lab
            python setup.py test
            cat coverage.xml
            ./cc-test-reporter after-build -d -p ~/Unity-Lab/unity_lab --exit-code $? coverage.xml
      - store_test_results:
          path: htmlcov

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test:
          requires:
            - build
